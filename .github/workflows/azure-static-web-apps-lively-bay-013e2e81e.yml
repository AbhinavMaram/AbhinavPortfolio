name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event.action != 'closed' && github.event.pull_request.merged == false)
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Ensure this matches what your project needs, or keep it generic

      # --- START: Combined and more explicit step for Tailwind CSS build ---
      - name: Install and Build Tailwind CSS
        # We will manually change directory and run commands within the same shell instance.
        run: |
          cd ./frontend # Explicitly change directory
          npm install tailwindcss # Install tailwindcss locally
          ./node_modules/.bin/tailwindcss -i ./styles.css -o ./dist/styles.css --minify # Run the build command
          # Also, ensure 'dist' folder is created if it doesn't exist
          # You might want to remove this for production builds after testing
          ls -R ./dist # List contents of dist to confirm output
      # --- END: Combined and more explicit step for Tailwind CSS build ---

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_BAY_013E2E81E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "./frontend" # Points to the frontend directory
          api_location: "./backend/ContactFunction"
          output_location: "dist" # Points to the 'dist' folder *inside* frontend
                                  # So, Azure will deploy from ./frontend/dist

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_BAY_013E2E81E }}
          action: "close"